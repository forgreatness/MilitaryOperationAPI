// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilitaryOperationAPI.Data;

#nullable disable

namespace MilitaryOperationAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250915062858_MilitaryOperationDefaultData")]
    partial class MilitaryOperationDefaultData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MilitaryOperationAPI.Domain.Models.Entities.Operation", b =>
                {
                    b.Property<Guid>("OperationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AssignedByUserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OperationID");

                    b.HasIndex("AssignedByUserID");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("MilitaryOperationAPI.Domain.Models.Entities.Role", b =>
                {
                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = new Guid("11111111-1111-1111-1111-111111111111"),
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = new Guid("22222222-2222-2222-2222-222222222222"),
                            RoleName = "Dev"
                        },
                        new
                        {
                            RoleID = new Guid("33333333-3333-3333-3333-333333333333"),
                            RoleName = "President"
                        },
                        new
                        {
                            RoleID = new Guid("44444444-4444-4444-4444-444444444444"),
                            RoleName = "Vice President"
                        },
                        new
                        {
                            RoleID = new Guid("55555555-5555-5555-5555-555555555555"),
                            RoleName = "Secretary of Defense"
                        },
                        new
                        {
                            RoleID = new Guid("66666666-6666-6666-6666-666666666666"),
                            RoleName = "Country Man"
                        });
                });

            modelBuilder.Entity("MilitaryOperationAPI.Domain.Models.Entities.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Email = "danh3nguyen15@gmail.com",
                            FirstName = "Danh",
                            LastName = "Nguyen",
                            Password = "$2b$10$cQaDQjeXbylLQoRnjNYGP.R6H47AGfnada9GaC0qljV5wBGLmyiLa",
                            Title = "Software Architect"
                        });
                });

            modelBuilder.Entity("MilitaryOperationAPI.Domain.Models.Entities.UserRole", b =>
                {
                    b.Property<Guid>("AssignedUserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssignedRoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedByUserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignedUserID", "AssignedRoleID");

                    b.HasIndex("AssignedRoleID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            AssignedUserID = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            AssignedRoleID = new Guid("11111111-1111-1111-1111-111111111111"),
                            AssignedDate = new DateTime(2025, 9, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            ExpiredDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MilitaryOperationAPI.Domain.Models.Entities.Operation", b =>
                {
                    b.HasOne("MilitaryOperationAPI.Domain.Models.Entities.User", "AssignedByUser")
                        .WithMany()
                        .HasForeignKey("AssignedByUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedByUser");
                });

            modelBuilder.Entity("MilitaryOperationAPI.Domain.Models.Entities.UserRole", b =>
                {
                    b.HasOne("MilitaryOperationAPI.Domain.Models.Entities.Role", "AssignedRole")
                        .WithMany("Users")
                        .HasForeignKey("AssignedRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilitaryOperationAPI.Domain.Models.Entities.User", "AssignedUser")
                        .WithMany("Roles")
                        .HasForeignKey("AssignedUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedRole");

                    b.Navigation("AssignedUser");
                });

            modelBuilder.Entity("MilitaryOperationAPI.Domain.Models.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MilitaryOperationAPI.Domain.Models.Entities.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
